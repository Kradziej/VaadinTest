package com.egzaminator.components;

import org.springframework.security.authentication.AuthenticationManager;

import com.vaadin.annotations.AutoGenerated;
import com.vaadin.data.fieldgroup.FieldGroup;
import com.vaadin.data.util.ObjectProperty;
import com.vaadin.data.util.PropertysetItem;
import com.vaadin.server.VaadinSession;
import com.vaadin.ui.AbsoluteLayout;
import com.vaadin.ui.Alignment;
import com.vaadin.ui.Button;
import com.vaadin.ui.Button.ClickEvent;
import com.vaadin.ui.Button.ClickListener;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.FormLayout;
import com.vaadin.ui.HorizontalLayout;
import com.vaadin.ui.TextField;
import com.vaadin.ui.UI;
import com.vaadin.ui.Window;


public class HeaderView extends CustomComponent {

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	@AutoGenerated
	private HorizontalLayout mainLayout;

	@AutoGenerated
	private Button loginButton;

	// login form
	private AbsoluteLayout loginFormWrapper;
	private FormLayout loginForm;
	private PropertysetItem data;
	private FieldGroup loginData;
	private Window loginWindow;
	
	AuthenticationManager auth;

	/**
	 * The constructor should first build the main layout, set the
	 * composition root and then do any custom initialization.
	 *
	 * The constructor will not be automatically regenerated by the
	 * visual editor.
	 */
	public HeaderView() {
		buildMainLayout();
		setCompositionRoot(mainLayout);

		buildLoginForm();
	}
	
	private void buildLoginForm() {

		// Build form
		data = new PropertysetItem();
		data.addItemProperty("name", new ObjectProperty<String>(""));
		data.addItemProperty("surname", new ObjectProperty<String>(""));
		
		loginForm = new FormLayout();
		
		TextField nameField = new TextField("Login");
		loginForm.addComponent(nameField);
		TextField subnameField = new TextField("Has³o");
		loginForm.addComponent(subnameField);
		Button loginSubmitButton = new Button("Zaloguj");
		loginForm.addComponent(loginSubmitButton);
		
		loginData = new FieldGroup(data);
		loginData.bind(nameField, "name");
		loginData.bind(subnameField, "surname");
		
		// Add form to wrapper
		loginFormWrapper = new AbsoluteLayout();
		loginFormWrapper.addComponent(loginForm);
		loginWindow = new Window();
		loginWindow.setWidth("300px");
		loginWindow.setHeight("200px");
		loginWindow.setContent(loginFormWrapper);

		
		// Listeners
		
		
		loginSubmitButton.addClickListener(new ClickListener() {
			
			@Override
			public void buttonClick(ClickEvent event) {
				
				VaadinSession.getCurrent();
			}
		});
		
		
		loginButton.addClickListener(new ClickListener() {
			
			@Override
			public void buttonClick(ClickEvent event) {
			
				if(!loginWindow.isAttached()) {
					
					loginWindow.setPositionY(event.getClientY() - event.getRelativeY() + 45 );
					loginWindow.setPositionX(event.getClientX() - event.getRelativeX() + 25 );
					UI.getCurrent().addWindow(loginWindow);
					loginWindow.focus();
				} else {
					
					loginWindow.close();
				}
			}
		});
		
	}

	@AutoGenerated
	private HorizontalLayout buildMainLayout() {
		// common part: create layout
		mainLayout = new HorizontalLayout();
		mainLayout.setImmediate(false);
		mainLayout.setWidth("100%");
		mainLayout.setHeight("100%");
		mainLayout.setMargin(false);
	
		// top-level component properties
		setWidth("100.0%");
		setHeight("100.0%");
		
		// loginButton
		loginButton = new Button();
		loginButton.setCaption("Zaloguj siê");
		loginButton.setImmediate(false);
		loginButton.setWidth("-1px");
		loginButton.setHeight("-1px");
		mainLayout.addComponent(loginButton);
		mainLayout.setComponentAlignment(loginButton, new Alignment(6));
		
		return mainLayout;
	}
	

}
