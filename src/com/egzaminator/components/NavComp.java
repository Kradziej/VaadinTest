package com.egzaminator.components;

import com.vaadin.annotations.AutoGenerated;
import com.vaadin.data.fieldgroup.FieldGroup;
import com.vaadin.data.util.ObjectProperty;
import com.vaadin.data.util.PropertysetItem;
import com.vaadin.ui.AbsoluteLayout;
import com.vaadin.ui.Alignment;
import com.vaadin.ui.Button;
import com.vaadin.ui.Button.ClickEvent;
import com.vaadin.ui.Button.ClickListener;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.FormLayout;
import com.vaadin.ui.HorizontalLayout;
import com.vaadin.ui.MenuBar;
import com.vaadin.ui.TextField;
import com.vaadin.ui.UI;
import com.vaadin.ui.Window;

public class NavComp extends CustomComponent {

	/*- VaadinEditorProperties={"grid":"RegularGrid,17","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	@AutoGenerated
	private HorizontalLayout mainLayout;
	@AutoGenerated
	private Button button_1;
	@AutoGenerated
	private MenuBar menuBar_1;
	private AbsoluteLayout loginFormWrapper;
	private FormLayout loginForm;
	private PropertysetItem data;
	private FieldGroup loginData;
	private Window loginWindow;
	
	
	/**
	 * The constructor should first build the main layout, set the
	 * composition root and then do any custom initialization.
	 *
	 * The constructor will not be automatically regenerated by the
	 * visual editor.
	 */
	public NavComp() {
		buildMainLayout();
		setCompositionRoot(mainLayout);

		buildLoginForm();
	}

	private void buildLoginForm() {

		// Build form
		data = new PropertysetItem();
		data.addItemProperty("name", new ObjectProperty<String>(""));
		data.addItemProperty("surname", new ObjectProperty<String>(""));
		
		loginForm = new FormLayout();
		
		TextField nameField = new TextField("Imie");
		loginForm.addComponent(nameField);
		TextField subnameField = new TextField("Naz wisko");
		loginForm.addComponent(subnameField);

		loginData = new FieldGroup(data);
		loginData.setBuffered(true);
		loginData.bind(nameField, "name");
		loginData.bind(subnameField, "surname");
		
		// Add form to wrapper
		loginFormWrapper = new AbsoluteLayout();
		loginFormWrapper.addComponent(loginForm);
		loginWindow = new Window("Login");
		loginWindow.setWidth("300px");
		loginWindow.setHeight("200px");
		loginWindow.setContent(loginFormWrapper);

		button_1.addClickListener(new ClickListener() {
			
			@Override
			public void buttonClick(ClickEvent event) {
			
				loginWindow.setPositionY(event.getClientY() - event.getRelativeY() + 40 );
				loginWindow.setPositionX(event.getClientX() - event.getRelativeX() + 20 );
				UI.getCurrent().addWindow(loginWindow);
				loginWindow.focus();
			}
		});
		
		menuBar_1.addItem("ADMINISTRACJA", null);
		menuBar_1.addItem("KANDYDACI", null);
		menuBar_1.addItem("TESTY", null);
		//horizontalLayout_2.setExpandRatio(menuBar_1, 4.0f);
		//horizontalLayout_2.setExpandRatio(textField_2, 1.7f);
	}

	@AutoGenerated
	private HorizontalLayout buildMainLayout() {
		// common part: create layout
		mainLayout = new HorizontalLayout();
		mainLayout.setImmediate(false);
		mainLayout.setWidth("100%");
		mainLayout.setHeight("100%");
		mainLayout.setMargin(false);
		
		// top-level component properties
		setWidth("100.0%");
		setHeight("100.0%");
		
		// menuBar_1
		menuBar_1 = new MenuBar();
		menuBar_1.setImmediate(false);
		menuBar_1.setWidth("-1px");
		menuBar_1.setHeight("-1px");
		mainLayout.addComponent(menuBar_1);
		mainLayout.setExpandRatio(menuBar_1, 2.0f);
		mainLayout.setComponentAlignment(menuBar_1, new Alignment(33));
		
		// button_1
		button_1 = new Button();
		button_1.setCaption("Zaloguj sie");
		button_1.setImmediate(true);
		button_1.setWidth("-1px");
		button_1.setHeight("-1px");
		mainLayout.addComponent(button_1);
		mainLayout.setComponentAlignment(button_1, new Alignment(20));
		
		return mainLayout;
	}

}
